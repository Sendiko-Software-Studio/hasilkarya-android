// Generated by Dagger (https://dagger.dev).
package com.system.hasilkarya.truck_fuel.presentation;

import com.system.hasilkarya.core.network.NetworkConnectivityObserver;
import com.system.hasilkarya.core.repositories.FuelRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FuelQrScreenViewModel_Factory implements Factory<FuelQrScreenViewModel> {
  private final Provider<FuelRepository> repositoryProvider;

  private final Provider<NetworkConnectivityObserver> connectionObserverProvider;

  public FuelQrScreenViewModel_Factory(Provider<FuelRepository> repositoryProvider,
      Provider<NetworkConnectivityObserver> connectionObserverProvider) {
    this.repositoryProvider = repositoryProvider;
    this.connectionObserverProvider = connectionObserverProvider;
  }

  @Override
  public FuelQrScreenViewModel get() {
    return newInstance(repositoryProvider.get(), connectionObserverProvider.get());
  }

  public static FuelQrScreenViewModel_Factory create(Provider<FuelRepository> repositoryProvider,
      Provider<NetworkConnectivityObserver> connectionObserverProvider) {
    return new FuelQrScreenViewModel_Factory(repositoryProvider, connectionObserverProvider);
  }

  public static FuelQrScreenViewModel newInstance(FuelRepository repository,
      NetworkConnectivityObserver connectionObserver) {
    return new FuelQrScreenViewModel(repository, connectionObserver);
  }
}
